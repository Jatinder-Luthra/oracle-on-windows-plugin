{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Overview \u00b6 Oracle on Windows plugin is developed to virtualize Oracle data source on Windows Server. This plugin cover following use-cases: Full (Incremental Level 0) non-multitenant database dSource creation from existing RMAN backups on disk of database in archivelog mode. Full (Incremental Level 0) non-multitenant database dSource creation from existing RMAN backups on disk of database in no archivelog mode. Ingest Oracle Database \u00b6 Oracle database single instance offline backups using RMAN (Zero Touch Production). Oracle single instance online backups using RMAN. Prerequisites \u00b6 Support Matrix \u00b6 Windows Server 2012 Windows Server 2016 Windows Server 2019 Oracle 11gR1/R2 Oracle 12c R1/R2 Oracle 18c Oracle 19c Staging Requirements \u00b6 O/S user with following privileges 1. Regular o/s user (oracle or non-oracle). 2. Credentials of oracle user. 3. Execute access on Oracle binaries (if using non-oracle user). 4. Delphix Connector software is installed and running. - Install Delphix Connector, https://docs.delphix.com/docs/datasets/sql-server-environments-and-data-sources/managing-sql-server-environments-and-hosts/installing-the-delphix-connector-service-on-the-target-database-servers 5. Access to source instance backup file(s) (local or SMB location) from Staging host logged as delphix o/s user. 6. Recommended iSCSI Registry settings must be in place. - Requirements for Windows iSCSI Configuration, https://docs.delphix.com/docs/datasets/sql-server-environments-and-data-sources/sql-server-support-and-requirements/requirements-for-windows-iscsi-configuration Target Requirements \u00b6 O/S user with following privileges 1. Regular o/s user (oracle or non-oracle). 2. Credentials of oracle user. 3. Execute access on Oracle binaries (if using non-oracle user). 4. Delphix Connector software is installed and running. - Install Delphix Connector, https://docs.delphix.com/docs/datasets/sql-server-environments-and-data-sources/managing-sql-server-environments-and-hosts/installing-the-delphix-connector-service-on-the-target-database-servers 5. Recommended iSCSI Registry settings must be in place. - Requirements for Windows iSCSI Configuration, https://docs.delphix.com/docs/datasets/sql-server-environments-and-data-sources/sql-server-support-and-requirements/requirements-for-windows-iscsi-configuration","title":"Overview"},{"location":"index.html#overview","text":"Oracle on Windows plugin is developed to virtualize Oracle data source on Windows Server. This plugin cover following use-cases: Full (Incremental Level 0) non-multitenant database dSource creation from existing RMAN backups on disk of database in archivelog mode. Full (Incremental Level 0) non-multitenant database dSource creation from existing RMAN backups on disk of database in no archivelog mode.","title":"Overview"},{"location":"index.html#ingest-oracle-database","text":"Oracle database single instance offline backups using RMAN (Zero Touch Production). Oracle single instance online backups using RMAN.","title":"Ingest Oracle Database"},{"location":"index.html#prerequisites","text":"","title":"Prerequisites"},{"location":"index.html#support-matrix","text":"Windows Server 2012 Windows Server 2016 Windows Server 2019 Oracle 11gR1/R2 Oracle 12c R1/R2 Oracle 18c Oracle 19c","title":"Support Matrix"},{"location":"index.html#staging-requirements","text":"O/S user with following privileges 1. Regular o/s user (oracle or non-oracle). 2. Credentials of oracle user. 3. Execute access on Oracle binaries (if using non-oracle user). 4. Delphix Connector software is installed and running. - Install Delphix Connector, https://docs.delphix.com/docs/datasets/sql-server-environments-and-data-sources/managing-sql-server-environments-and-hosts/installing-the-delphix-connector-service-on-the-target-database-servers 5. Access to source instance backup file(s) (local or SMB location) from Staging host logged as delphix o/s user. 6. Recommended iSCSI Registry settings must be in place. - Requirements for Windows iSCSI Configuration, https://docs.delphix.com/docs/datasets/sql-server-environments-and-data-sources/sql-server-support-and-requirements/requirements-for-windows-iscsi-configuration","title":"Staging Requirements"},{"location":"index.html#target-requirements","text":"O/S user with following privileges 1. Regular o/s user (oracle or non-oracle). 2. Credentials of oracle user. 3. Execute access on Oracle binaries (if using non-oracle user). 4. Delphix Connector software is installed and running. - Install Delphix Connector, https://docs.delphix.com/docs/datasets/sql-server-environments-and-data-sources/managing-sql-server-environments-and-hosts/installing-the-delphix-connector-service-on-the-target-database-servers 5. Recommended iSCSI Registry settings must be in place. - Requirements for Windows iSCSI Configuration, https://docs.delphix.com/docs/datasets/sql-server-environments-and-data-sources/sql-server-support-and-requirements/requirements-for-windows-iscsi-configuration","title":"Target Requirements"},{"location":"Discovery.html","text":"Discovery \u00b6 Environment discovery is a process that enables the Oracle on Windows Plugin to search Oracle Binaries on a host. Whenever there is any changes (installing a new binary home) to an already set up environment in the Delphix application, environment refresh needs to be performed. Prerequisites \u00b6 Install delphix engine 6.x and above Install Oracle Binaries on staging and target servers Installation of the Oracle on Windows Plugin is required before the discovery Refresh Environment \u00b6 Environment refresh will update the metadata associated with that environment and copies new plugin to the host. Steps: Login to the Delphix Management application. Once plugin is uploaded, click Manage --> Environments In the Environments panel, choose the environment you want to refresh and click on refresh icon. Once environment refresh completes, installed Oracle Binaries will appear under Installations. Sourceconfig \u00b6 Every environment contains repositories and each environment may have any number of repositories associated with it. Repository represents the binaries for oracle instance. Each repository can have many SourceConfig which represent oracle instance. There is no sourceconfig generated automatically in this plugin. We need to configure SourceConfig objects through which we can create a dSource.","title":"Discovery"},{"location":"Discovery.html#discovery","text":"Environment discovery is a process that enables the Oracle on Windows Plugin to search Oracle Binaries on a host. Whenever there is any changes (installing a new binary home) to an already set up environment in the Delphix application, environment refresh needs to be performed.","title":"Discovery"},{"location":"Discovery.html#prerequisites","text":"Install delphix engine 6.x and above Install Oracle Binaries on staging and target servers Installation of the Oracle on Windows Plugin is required before the discovery","title":"Prerequisites"},{"location":"Discovery.html#refresh-environment","text":"Environment refresh will update the metadata associated with that environment and copies new plugin to the host. Steps: Login to the Delphix Management application. Once plugin is uploaded, click Manage --> Environments In the Environments panel, choose the environment you want to refresh and click on refresh icon. Once environment refresh completes, installed Oracle Binaries will appear under Installations.","title":"Refresh Environment"},{"location":"Discovery.html#sourceconfig","text":"Every environment contains repositories and each environment may have any number of repositories associated with it. Repository represents the binaries for oracle instance. Each repository can have many SourceConfig which represent oracle instance. There is no sourceconfig generated automatically in this plugin. We need to configure SourceConfig objects through which we can create a dSource.","title":"Sourceconfig"},{"location":"Installation.html","text":"Installation \u00b6 Delphix plugin for Oracle on Windows can be installed via GUI. Prerequisites \u00b6 Install Delphix Engine 6.x and above. Install Oracle Binaries on Staging and Target servers. Upload Oracle on Windows Plugin \u00b6 Click on Manage --> Plugins Click on + icon In pop-up window, browse or drag/drop the plugin file Click on close button once upload succeeds See the plugin version in Plugins section","title":"Installation"},{"location":"Installation.html#installation","text":"Delphix plugin for Oracle on Windows can be installed via GUI.","title":"Installation"},{"location":"Installation.html#prerequisites","text":"Install Delphix Engine 6.x and above. Install Oracle Binaries on Staging and Target servers.","title":"Prerequisites"},{"location":"Installation.html#upload-oracle-on-windows-plugin","text":"Click on Manage --> Plugins Click on + icon In pop-up window, browse or drag/drop the plugin file Click on close button once upload succeeds See the plugin version in Plugins section","title":"Upload Oracle on Windows Plugin"},{"location":"Linking.html","text":"Linking \u00b6 Linking a data source will create a dSource object on the engine and allow Delphix to ingest data from this source. The dSource is an object that the Delphix Virtualization Engine uses to create and update virtual copies of your database. Prerequisites \u00b6 Install delphix engine 6.x and above Install oracle binaries on staging host Execute Discovery on staging host Oracle full or incremental level 0 backup along with control file backup, must be present on staging host or on SMB path accessible by staging host. Create Source Config \u00b6 Login to Delphix Management application. Click Manage --> Environments. In the Environments panel, choose the environment under which you want to create dSource, choose Oracle binaries for dSource and click on on + icon. In pop-up window, fill in the details for dsource Click Add. Source Config entry for dSource gets created, which will be used to create dSource. Create dSource \u00b6 Steps: Once source config is created, click on Add dSource for config In the Add dSource wizard, fill in the details, and click Next. Instance Name : Staging DB instance Name Mount path on Staging Host : iSCSI mount path for staging database Source Database DBID : DB ID of source db from which backup was taken Database disk backup location : Staging location or SMB path where backup files are residing Source Database Controlfile disk backup piece name : Control File backup name under above location Username : Oracle username on staging server Password : Password of Oracle user mentioned above Customize init.ora parameters : Modify init.ora parameters of Staging DB by either one of the options: - Add the parameter directly by clicking +Add button - Provide init.ora parameters file, with each parameter in new line and as format, <parameter>=<value> Provide dSource name and delphix group under which dSource resides. Click Next. Select Staging Environment and Delphix o/s user from dropdown. Click Next. Setup SnapSync or Retention Policies, if required. Click Next. Setup PreSync or PostSync hooks, if required. Click Next. Review Summary of dSource linking settings and hit Submit. dSource Linking process starts. You can monitor the progress under right side Running Actions tab. Once dSource is successfully created, a new snapshot will appear for dSource under Manage --> Datasets page.","title":"Linking"},{"location":"Linking.html#linking","text":"Linking a data source will create a dSource object on the engine and allow Delphix to ingest data from this source. The dSource is an object that the Delphix Virtualization Engine uses to create and update virtual copies of your database.","title":"Linking"},{"location":"Linking.html#prerequisites","text":"Install delphix engine 6.x and above Install oracle binaries on staging host Execute Discovery on staging host Oracle full or incremental level 0 backup along with control file backup, must be present on staging host or on SMB path accessible by staging host.","title":"Prerequisites"},{"location":"Linking.html#create-source-config","text":"Login to Delphix Management application. Click Manage --> Environments. In the Environments panel, choose the environment under which you want to create dSource, choose Oracle binaries for dSource and click on on + icon. In pop-up window, fill in the details for dsource Click Add. Source Config entry for dSource gets created, which will be used to create dSource.","title":"Create Source Config"},{"location":"Linking.html#create-dsource","text":"Steps: Once source config is created, click on Add dSource for config In the Add dSource wizard, fill in the details, and click Next. Instance Name : Staging DB instance Name Mount path on Staging Host : iSCSI mount path for staging database Source Database DBID : DB ID of source db from which backup was taken Database disk backup location : Staging location or SMB path where backup files are residing Source Database Controlfile disk backup piece name : Control File backup name under above location Username : Oracle username on staging server Password : Password of Oracle user mentioned above Customize init.ora parameters : Modify init.ora parameters of Staging DB by either one of the options: - Add the parameter directly by clicking +Add button - Provide init.ora parameters file, with each parameter in new line and as format, <parameter>=<value> Provide dSource name and delphix group under which dSource resides. Click Next. Select Staging Environment and Delphix o/s user from dropdown. Click Next. Setup SnapSync or Retention Policies, if required. Click Next. Setup PreSync or PostSync hooks, if required. Click Next. Review Summary of dSource linking settings and hit Submit. dSource Linking process starts. You can monitor the progress under right side Running Actions tab. Once dSource is successfully created, a new snapshot will appear for dSource under Manage --> Datasets page.","title":"Create dSource"},{"location":"PluginDevelopment.html","text":"Build plugin \u00b6 Create python virtual environment and install required libraries (dvp, pytest, pytest-html & pytest-cov) using script virtualEnvSetup.sh cd <full path of project directory till ` Oracle_On_Windows ` > ./test/virtualEnvSetup.sh <virtual enviornment name> For example: cd \"C:\\Users\\oracle\\Desktop\\git_ora_win\\Oracle_On_Windows\" ./test/virtualEnvSetup.sh \"oraWinEnv\" Run this command to activate the virtual environment created in step 1. C:\\oraWinEnv\\Scripts\\activate Build the source code. It generates the build with name artifacts.json : dvp build Upload plugin \u00b6 Upload the artifacts.json ( generated in step 3 ) on Delphix Engine: dvp upload -e <Delphix_Engine_Name> -u <username> --password <password> Debug plugin logs \u00b6 Download the plugin logs using below command: dvp download-logs -c plugin_config.yml -e <Delphix_Engine_Name> -u admin --password <password>","title":"PluginDevelopment"},{"location":"PluginDevelopment.html#build-plugin","text":"Create python virtual environment and install required libraries (dvp, pytest, pytest-html & pytest-cov) using script virtualEnvSetup.sh cd <full path of project directory till ` Oracle_On_Windows ` > ./test/virtualEnvSetup.sh <virtual enviornment name> For example: cd \"C:\\Users\\oracle\\Desktop\\git_ora_win\\Oracle_On_Windows\" ./test/virtualEnvSetup.sh \"oraWinEnv\" Run this command to activate the virtual environment created in step 1. C:\\oraWinEnv\\Scripts\\activate Build the source code. It generates the build with name artifacts.json : dvp build","title":"Build plugin"},{"location":"PluginDevelopment.html#upload-plugin","text":"Upload the artifacts.json ( generated in step 3 ) on Delphix Engine: dvp upload -e <Delphix_Engine_Name> -u <username> --password <password>","title":"Upload plugin"},{"location":"PluginDevelopment.html#debug-plugin-logs","text":"Download the plugin logs using below command: dvp download-logs -c plugin_config.yml -e <Delphix_Engine_Name> -u admin --password <password>","title":"Debug plugin logs"},{"location":"Provisioning.html","text":"Provisioning \u00b6 This topic describes the basic concepts involved with provisioning VDBs from dSource. A dSource is a virtualized representation of a physical or logical source database. As a virtual representation, it cannot be accessed or manipulated using database tools. Instead, you must create a virtual database (VDB) from a dSource snapshot. A VDB is an independent, writable copy of a dSource snapshot. You can also create VDBs from other VDBs. Once you have provisioned a VDB to a target environment, you can also implement snapshot and retention policies for the VDB, which will determine how frequently Delphix Engine will take a database snapshot and how long the snapshots will be retained for recovery and provisioning purposes. Snapshots accumulate over time. To view a snapshot: From the Datasets panel, click the group containing the dSource. Select dSource. Click the TimeFlow tab. The TimeFlow appears as a list of dates, each of which expands to show snapshots from that date. Times, when the VDB has been refreshed, are marked by a blue line between dates. On the TimeFlow, you can also filter by type of snapshot. To do so, click the filter button, which is shaped like an eye. You can scroll through these lists to select the one you want, or you can enter a date and time to search for a specific snapshot. Once you have provisioned a VDB, you can also take snapshots of it. As with the dSource snapshots, you can find these when you select the VDB in the Datasets panel. You can then provision additional VDBs from these VDB snapshots. Dependencies If there are dependencies on the snapshot, you will not be able to delete the snapshot free space; the dependencies rely on the data associated with the snapshot. Provisioning VDB \u00b6 This topic describes how to provision a virtual database (VDB) from an oracle dSource. Prerequisites \u00b6 Install delphix engine 6.x and above Create dSource on staging host Install oracle binaries on target host Add target environment to delphix Execute Discovery on target host Provision Virtual Database (VDB) \u00b6 Login to the Delphix Management application. Navigate to Manage --> Datasets. Choose a dSource snapshot from which you want to provision, and click Provision VDB icon. Select a Target environment from the left pane. Select an Installation to use from the dropdown list of available oracle binaries on that environment, and select environment user. Click Next. Enter VDB Configuration details, and click Next. Mount Path on Target Host : iSCSI mount path for virtual database Instance Name : VDB Instance Name Database Unique Name : VDB Unique Name Database Name : VDB name Username : Oracle username on target server Password : Password of Oracle user mentioned above No Archivelog Mode : By default, VDB is in archivelog mode. Check this box to disable archivelog mode on VDB Customize init.ora parameters : Modify init.ora parameters of Virtual DB by either one of the options: - Add the parameter directly by clicking +Add button - Provide init.ora parameters file, with each parameter in new line and as format, <parameter>=<value> Provide VDB name and delphix group under which VDB resides. Click Next. Setup Snapshot policy for VDB, if required. Click Next. Attach Masking Job to VDB, if required. Click Next. Specify any desired hook operations. Click Next. Review the Provisioning Configuration and Data Management information, and hit Submit. When provisioning starts, you can review the progress of the job in the Databases panel, or in the Job History panel of the Dashboard. When provisioning is complete, the VDB will be included in the group you designated and listed in the Databases panel. If you select the VDB in the Databases panel and click the Open icon, you can view its card, which contains information about the database and its Data Management settings.","title":"Provisioning"},{"location":"Provisioning.html#provisioning","text":"This topic describes the basic concepts involved with provisioning VDBs from dSource. A dSource is a virtualized representation of a physical or logical source database. As a virtual representation, it cannot be accessed or manipulated using database tools. Instead, you must create a virtual database (VDB) from a dSource snapshot. A VDB is an independent, writable copy of a dSource snapshot. You can also create VDBs from other VDBs. Once you have provisioned a VDB to a target environment, you can also implement snapshot and retention policies for the VDB, which will determine how frequently Delphix Engine will take a database snapshot and how long the snapshots will be retained for recovery and provisioning purposes. Snapshots accumulate over time. To view a snapshot: From the Datasets panel, click the group containing the dSource. Select dSource. Click the TimeFlow tab. The TimeFlow appears as a list of dates, each of which expands to show snapshots from that date. Times, when the VDB has been refreshed, are marked by a blue line between dates. On the TimeFlow, you can also filter by type of snapshot. To do so, click the filter button, which is shaped like an eye. You can scroll through these lists to select the one you want, or you can enter a date and time to search for a specific snapshot. Once you have provisioned a VDB, you can also take snapshots of it. As with the dSource snapshots, you can find these when you select the VDB in the Datasets panel. You can then provision additional VDBs from these VDB snapshots. Dependencies If there are dependencies on the snapshot, you will not be able to delete the snapshot free space; the dependencies rely on the data associated with the snapshot.","title":"Provisioning"},{"location":"Provisioning.html#provisioning-vdb","text":"This topic describes how to provision a virtual database (VDB) from an oracle dSource.","title":"Provisioning VDB"},{"location":"Provisioning.html#prerequisites","text":"Install delphix engine 6.x and above Create dSource on staging host Install oracle binaries on target host Add target environment to delphix Execute Discovery on target host","title":"Prerequisites"},{"location":"Provisioning.html#provision-virtual-database-vdb","text":"Login to the Delphix Management application. Navigate to Manage --> Datasets. Choose a dSource snapshot from which you want to provision, and click Provision VDB icon. Select a Target environment from the left pane. Select an Installation to use from the dropdown list of available oracle binaries on that environment, and select environment user. Click Next. Enter VDB Configuration details, and click Next. Mount Path on Target Host : iSCSI mount path for virtual database Instance Name : VDB Instance Name Database Unique Name : VDB Unique Name Database Name : VDB name Username : Oracle username on target server Password : Password of Oracle user mentioned above No Archivelog Mode : By default, VDB is in archivelog mode. Check this box to disable archivelog mode on VDB Customize init.ora parameters : Modify init.ora parameters of Virtual DB by either one of the options: - Add the parameter directly by clicking +Add button - Provide init.ora parameters file, with each parameter in new line and as format, <parameter>=<value> Provide VDB name and delphix group under which VDB resides. Click Next. Setup Snapshot policy for VDB, if required. Click Next. Attach Masking Job to VDB, if required. Click Next. Specify any desired hook operations. Click Next. Review the Provisioning Configuration and Data Management information, and hit Submit. When provisioning starts, you can review the progress of the job in the Databases panel, or in the Job History panel of the Dashboard. When provisioning is complete, the VDB will be included in the group you designated and listed in the Databases panel. If you select the VDB in the Databases panel and click the Open icon, you can view its card, which contains information about the database and its Data Management settings.","title":"Provision Virtual Database (VDB)"}]}